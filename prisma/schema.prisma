// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  role  String  @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isBlocked Boolean @default(false)
  posts  Post[]
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  content     String?
  published   Boolean   @default(false)
  authorId    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  deletedAt   DateTime?
  author      User      @relation(fields: [authorId], references: [id])
  categories  PostCategory[] // Many-to-many 관계를 위한 중간 테이블
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  createdAt   DateTime     @default(now())
  posts       PostCategory[] // Many-to-many 관계를 위한 중간 테이블
}

model PostCategory {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([postId, categoryId]) // 복합 키 설정 (Many-to-Many 관계의 중간 테이블)
}

